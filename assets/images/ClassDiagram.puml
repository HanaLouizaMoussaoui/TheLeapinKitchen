@startuml The Leapin' Kitchen

skinparam monochrome true
hide empty members

    FrogFactory "1" --> "1" FrogColor
    FrogFactory "1" --> "1" Frog

    Frog <|-- Customer
    Frog <|-- Player
    GameEntity <|-- Frog


    Restaurant "1" --> "1..*" Table
    Restaurant "1" --> "1" Counter
    Restaurant "1" --> "0..*" Customer
    Restaurant "1" --> "1" Player
    Restaurant "1" -- "1" PlayState
    PlayState "1" -- "1" Clock
    PlayState "1" -- "1" Player
    Counter "1" --> "0..3" Order
    Table "1" --> "0..1" Customer

    class FrogFactory{
        createFrog(FrogColor type): Frog
    }

    class FrogColor {
        <<enumeration>>
        PINK
        GREEN
        ORANGE
        BROWN
        RAINBOW
    }

    class PlayState{
        Player player
        Restaurant restaurant
        Clock clock
        enter()
        exit()
        update()
        render()
    }
    class Restaurant{
        Player player
        Counter counter
        List tables
        List customers
        update()
        render()
    }
    class Customer{
        Order order
        bool wasServed
        update()
        render()
    }
    class Order{
        String name
        int prepTimeInSeconds
        bool isReady
        prepare()
    }
    class Table{
        Customer customer
        bool isEmpty
        clear()
        update()
        render()
    }
    class Counter{
        Queue readyOrders
        Queue ordersToPrepare
        addOrder(Order newOrder)
        removeOrder()
        update()
        render()
    }
    class Player{
        int money
        update()
        render()
        reset()
    }

    class GameEntity{
        Array sprites
        Direction direction
        update()
        render()
        didCollideWithEntity(hitbox)
    }
    class Frog{
        FrogColor color
        int patience
        int pay
        update()
        render()
    }
    class Clock{
        int totalTime
        int currentTime
        start()
        update()
        stop()
        reset()
        render()
    }

@enduml
